name: CI
on: [push] 
jobs: 
  build: 
    name: Build and test 
    runs-on: ubuntu-latest 
    steps: 
    - uses: actions/checkout@v2 
    - run: docker build --target test --tag todo-app:test .
    - run: docker run --env-file .env.test todo-app:test
  
#  deploy:
#      name: Deploy 
#      runs-on: ubuntu-latest
#      needs: build
#      steps:
#        -
#          name: Login to Docker Hub
#          uses: docker/login-action@v2
#          with:
#            username: ${{ secrets.DOCKERHUB_USERNAME }}
#            password: ${{ secrets.DOCKERHUB_TOKEN }}  
#        - name: building image 
#          uses: actions/checkout@v2      
#        - run: docker build --target prod --tag scottamass/prod:latest .
#        - run: docker push scottamass/prod:latest
#        - name: build and push
#          run: curl -dH -X POST ${{ secrets.WEBHOOK_URL }}

  deploy:
    name: deploy
    env:
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - run: terraform init -input=false
    - run: terraform apply -var 'prefix=test' -var 'GITHUB_CLIENT_ID=${{secrets.GIT_HUB_CLIENT_ID}}' -var 'GITHUB_SECRET=${{secrets.GIT_HUB_SECRET}}' -auto-approve
    - run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
    - run: docker build --target prod --tag scottamass/prod:latest .
    - run: docker push scottamass/prod:latest
    - run: curl -dH --fail -X post "$(terraform output -raw cd_webhook)"          